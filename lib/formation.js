// Generated by CoffeeScript 1.3.3
(function() {
  var Formation, createPool, dirname, parseProcfile, readFile,
    __slice = [].slice;

  readFile = require('fs').readFile;

  dirname = require('path').dirname;

  parseProcfile = require('./procfile').parseProcfile;

  createPool = require('./pool').createPool;

  Formation = (function() {

    Formation.colors = ["cyan", "yellow", "green", "magenta", "red", "blue", "cyan+bold", "yellow+bold", "green+bold", "magenta+bold", "red+bold", "blue+bold"];

    function Formation(details, options) {
      var command, count, i, max, name;
      this.pools = {};
      max = 6;
      count = 0;
      for (name in details) {
        command = details[name];
        if (name.length > max) {
          max = name.length;
        }
        count++;
      }
      options.pad = max + 2;
      i = 0;
      for (name in details) {
        command = details[name];
        options.color = Formation.colors[i % Formation.colors.length];
        this.pools[name] = createPool(name, command, options);
        i++;
      }
    }

    Formation.prototype.spawn = function() {
      var name, pool, _ref, _results;
      _ref = this.pools;
      _results = [];
      for (name in _ref) {
        pool = _ref[name];
        pool.on('process:spawn', function(proc) {
          return proc.out.pipe(process.stdout, {
            end: false
          });
        });
        _results.push(pool.spawn());
      }
      return _results;
    };

    return Formation;

  })();

  exports.createFormation = function() {
    var args;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    return (function(func, args, ctor) {
      ctor.prototype = func.prototype;
      var child = new ctor, result = func.apply(child, args), t = typeof result;
      return t == "object" || t == "function" ? result || child : child;
    })(Formation, args, function(){});
  };

}).call(this);
